name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
defaults:
  run:
    shell: pwsh
jobs:
  build:
    name: ${{ matrix.os-name }}-${{ matrix.transport }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        transport: [ RabbitMQ, SqlServer ]
        include:
          - os: ubuntu-22.04
            os-name: Linux
      fail-fast: false
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.transport == 'RabbitMQ'
        uses: actions/upload-artifact@v4.4.3
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Install SQL Server
        if: matrix.transport == 'SqlServer'
        uses: Particular/install-sql-server-action@v1.2.0
        with:
          connection-string-env-var: SqlServerTransportConnectionString
          catalog: nservicebus
      - name: Prepare SQL Server
        if: matrix.transport == 'SqlServer'
        run: |
          echo "Create extra databases"
          sqlcmd -Q "CREATE DATABASE nservicebus2"
      - name: Setup RabbitMQ
        if: matrix.transport == 'RabbitMQ'
        uses: Particular/setup-rabbitmq-action@v1.7.1
        with:
          connection-string-name: RabbitMQTransport_ConnectionString
          tag: RabbitMQTransportBridge
      - name: Run tests
        uses: Particular/run-tests-action@v1.7.0
